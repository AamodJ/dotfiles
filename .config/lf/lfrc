set ratios 1:2:3
# Luke's lf settings


# Note on Image Previews
# For those wanting image previews, like this system, there are four steps to
# set it up. These are done automatically for LARBS users, but I will state
# them here for others doing it manually.
#
# 1. ueberzug must be installed.
# 2. The scope file (~/.config/lf/scope for me), must have a command similar to
#    mine to generate ueberzug images.
# 3. A `set cleaner` line as below is a cleaner script.
# 4. lf should be started through a wrapper script (~/.local/bin/lfub for me)
#    that creates the environment for ueberzug. This command can be be aliased
#    in your shellrc (`alias lf="lfub") or if set to a binding, should be
#    called directly instead of normal lf.

# Basic vars
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set cleaner '$XDG_CONFIG_HOME/lf/cleaner'
set previewer '$XDG_CONFIG_HOME/lf/scope'
map i $$XDG_CONFIG_HOME/lf/scope $f | less -R
set drawbox true
set ignorecase true

# cmds/functions
cmd open ${{
    case $(file --mime-type "$(readlink -f $f)" -b) in
	application/vnd.openxmlformats-officedocument.spreadsheetml.sheet) sc-im $fx ;;
	application/vnd.openxmlformats-officedocument.wordprocessingml.document) open $f ;;
	image/vnd.djvu|application/pdf|application/octet-stream|application/postscript) zathura $fx >/dev/null 2>&1 ;;
    text/*|application/json|inode/x-empty) $VISUAL $fx;;
	image/x-xcf) gimp $f >/dev/null 2>&1 ;;
	image/svg+xml) display -- $f ;;
	image/*) nsxiv $f >/dev/null 2>&1;;
	audio/*) mpv --audio-display=no $f ;;
	video/*) mpv $f -quiet >/dev/null 2>&1 ;;
	application/pdf|application/vnd*|application/epub*) zathura $fx >/dev/null 2>&1 ;;
	application/pgp-encrypted) $EDITOR $fx ;;
	application/gzip) tar xzvf $fx ;;
    *) for f in $fx; do $OPENER $f >/dev/null 2>&1; done;;
    esac
}}

cmd mkdir $mkdir -p "$(echo $* | tr ' ' '\ ')"

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack $fx
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd converth264 ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	clear; 
	eval ffmpeg -i \"$fx\" -vcodec libx264 -crf 30 $HOME/Videos/output.mp4
	notify-send "File converted." "File converted to H.264 with crf 30" --icon=$XDG_DATA_HOME/pixmaps/file-video-solid-white.png
}}

cmd setbg "$1"
cmd bulkrename $vidir

# Bindings
map <c-f> $lf -remote "send $id select '$(fzf)'"
map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)"
map gh
map g top
map D delete
map E extract
map C converth264
map M moveto
map <c-n> push :mkdir<space>
map <c-r> reload
map <enter> shell
map x $$f
map X !$f
map o &mimeopen $f
map O $mimeopen --ask $f

map A rename # at the very end
map a push A<a-b><a-b><a-f> # before extention
map c push A<a-b> # after extension
map I push A<c-a> # at the very beginning
map B bulkrename
map b $setbg $f

map . set hidden!

map <c-e> down
map <c-y> up
map V push :!$VISUAL<space>

map W $setsid -f $TERMINAL >/dev/null 2>&1

map Y $printf "%s" "$fx" | xclip -selection clipboard
